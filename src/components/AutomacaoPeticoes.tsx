import React, { useState } from 'react';\nimport '../styles/AutomacaoPeticoes.css';\n\ninterface Peticao {\n  id: string;\n  tipo: string;\n  tese: string;\n  cliente: string;\n  processo: string;\n  dataCriacao: string;\n  status: 'rascunho' | 'pronta' | 'enviada';\n  conteudo: string;\n}\n\nexport function AutomacaoPeticoes() {\n  const [step, setStep] = useState(1);\n  const [formData, setFormData] = useState({\n    tipo: 'replica',\n    tese: 'licenca-premio',\n    cliente: '',\n    processo: '',\n    modeloReferencia: '',\n    informacoesAdicionais: ''\n  });\n\n  const [peticaoGerada, setPeticaoGerada] = useState<Peticao | null>(null);\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState('');\n\n  const tipos = [\n    { value: 'replica', label: 'R√©plica' },\n    { value: 'recurso', label: 'Recurso' },\n    { value: 'contrarrazao', label: 'Contra-raz√£o' },\n    { value: 'embargo', label: 'Embargo' },\n    { value: 'peticial', label: 'Peti√ß√£o Inicial' }\n  ];\n\n  const teses = [\n    { value: 'licenca-premio', label: 'Licen√ßa-Pr√™mio' },\n    { value: 'abono-permanencia', label: 'Abono Perman√™ncia' },\n    { value: 'diferencas-salariais', label: 'Diferen√ßas Salariais' },\n    { value: 'gratificacao', label: 'Gratifica√ß√£o' },\n    { value: 'indenizacao', label: 'Indeniza√ß√£o' }\n  ];\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement>) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  const handleGerarPeticao = async () => {\n    setLoading(true);\n    setMessage('');\n\n    try {\n      // Simular gera√ß√£o de peti√ß√£o\n      await new Promise(resolve => setTimeout(resolve, 2000));\n\n      const peticao: Peticao = {\n        id: Math.random().toString(36).substr(2, 9),\n        tipo: formData.tipo,\n        tese: formData.tese,\n        cliente: formData.cliente,\n        processo: formData.processo,\n        dataCriacao: new Date().toLocaleDateString('pt-BR'),\n        status: 'pronta',\n        conteudo: `EXCELENT√çSSIMO SENHOR DOUTOR JUIZ DA ${formData.tese.toUpperCase()}\n\nVem, respeitosamente, perante Vossa Excel√™ncia, o(a) cliente ${formData.cliente}, por seu advogado infra-assinado, com fundamento no artigo 5¬∫ da Constitui√ß√£o Federal, apresentar ${formData.tipo.toUpperCase()} ao processo n¬∫ ${formData.processo}, pelos motivos de fato e de direito a seguir expostos:\n\nI - DOS FATOS\n\n${formData.informacoesAdicionais || 'Conforme documenta√ß√£o em anexo, o cliente faz jus aos direitos pleiteados.'}\n\nII - DO DIREITO\n\nA legisla√ß√£o trabalhista e a jurisprud√™ncia consolidada reconhecem o direito do cliente ao recebimento da verba em quest√£o.\n\nIII - DO PEDIDO\n\nPelo exposto, requer-se:\n\na) A proced√™ncia do pedido para condenar a parte adversa ao pagamento da verba devida;\nb) A condena√ß√£o em custas processuais e honor√°rios advocat√≠cios.\n\nNestes termos, pede deferimento.\n\nRespeitosamente submetido,\n\n[Assinado digitalmente]\nAdvogado(a) Respons√°vel`\n      };\n\n      setPeticaoGerada(peticao);\n      setMessage('‚úÖ Peti√ß√£o gerada com sucesso!');\n      setStep(2);\n    } catch (error) {\n      setMessage('‚ùå Erro ao gerar peti√ß√£o. Tente novamente.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleBaixarPeticao = () => {\n    if (!peticaoGerada) return;\n\n    const element = document.createElement('a');\n    const file = new Blob([peticaoGerada.conteudo], { type: 'text/plain' });\n    element.href = URL.createObjectURL(file);\n    element.download = `${peticaoGerada.tipo}_${peticaoGerada.processo}.txt`;\n    document.body.appendChild(element);\n    element.click();\n    document.body.removeChild(element);\n  };\n\n  return (\n    <div className=\"automacao-container\">\n      <div className=\"automacao-card\">\n        <div className=\"automacao-header\">\n          <h1>Automa√ß√£o de Peti√ß√µes</h1>\n          <p>Gere peti√ß√µes automaticamente com base em modelos e an√°lise de IA</p>\n        </div>\n\n        {message && (\n          <div className={`message ${message.includes('‚úÖ') ? 'success' : 'error'}`}>\n            {message}\n          </div>\n        )}\n\n        {/* Step 1: Configura√ß√£o */}\n        {step === 1 && (\n          <div className=\"form-step\">\n            <h2>Configura√ß√£o da Peti√ß√£o</h2>\n\n            <div className=\"form-group\">\n              <label>Tipo de Peti√ß√£o *</label>\n              <select\n                name=\"tipo\"\n                value={formData.tipo}\n                onChange={handleInputChange}\n                required\n              >\n                {tipos.map(t => (\n                  <option key={t.value} value={t.value}>{t.label}</option>\n                ))}\n              </select>\n            </div>\n\n            <div className=\"form-group\">\n              <label>Tese Jur√≠dica *</label>\n              <select\n                name=\"tese\"\n                value={formData.tese}\n                onChange={handleInputChange}\n                required\n              >\n                {teses.map(t => (\n                  <option key={t.value} value={t.value}>{t.label}</option>\n                ))}\n              </select>\n            </div>\n\n            <div className=\"form-row\">\n              <div className=\"form-group\">\n                <label>Cliente *</label>\n                <input\n                  type=\"text\"\n                  name=\"cliente\"\n                  value={formData.cliente}\n                  onChange={handleInputChange}\n                  placeholder=\"Nome do cliente\"\n                  required\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <label>N√∫mero do Processo *</label>\n                <input\n                  type=\"text\"\n                  name=\"processo\"\n                  value={formData.processo}\n                  onChange={handleInputChange}\n                  placeholder=\"0001234-56.2023.5.10.0001\"\n                  required\n                />\n              </div>\n            </div>\n\n            <div className=\"form-group\">\n              <label>Modelo de Refer√™ncia</label>\n              <select\n                name=\"modeloReferencia\"\n                value={formData.modeloReferencia}\n                onChange={handleInputChange}\n              >\n                <option value=\"\">Selecione um modelo...</option>\n                <option value=\"modelo1\">Modelo Padr√£o - Licen√ßa-Pr√™mio</option>\n                <option value=\"modelo2\">Modelo Padr√£o - Abono Perman√™ncia</option>\n                <option value=\"modelo3\">Modelo Padr√£o - Diferen√ßas Salariais</option>\n              </select>\n            </div>\n\n            <div className=\"form-group\">\n              <label>Informa√ß√µes Adicionais</label>\n              <textarea\n                name=\"informacoesAdicionais\"\n                value={formData.informacoesAdicionais}\n                onChange={handleInputChange}\n                placeholder=\"Adicione informa√ß√µes espec√≠ficas do caso...\"\n                rows={4}\n              />\n            </div>\n\n            <button\n              onClick={handleGerarPeticao}\n              disabled={loading || !formData.cliente || !formData.processo}\n              className=\"btn btn-primary\"\n            >\n              {loading ? '‚è≥ Gerando...' : '‚ú® Gerar Peti√ß√£o'}\n            </button>\n          </div>\n        )}\n\n        {/* Step 2: Revis√£o e Download */}\n        {step === 2 && peticaoGerada && (\n          <div className=\"form-step\">\n            <h2>Peti√ß√£o Gerada</h2>\n\n            <div className=\"peticao-info\">\n              <div className=\"info-row\">\n                <span className=\"label\">Tipo:</span>\n                <span className=\"value\">{peticaoGerada.tipo.toUpperCase()}</span>\n              </div>\n              <div className=\"info-row\">\n                <span className=\"label\">Tese:</span>\n                <span className=\"value\">{peticaoGerada.tese}</span>\n              </div>\n              <div className=\"info-row\">\n                <span className=\"label\">Cliente:</span>\n                <span className=\"value\">{peticaoGerada.cliente}</span>\n              </div>\n              <div className=\"info-row\">\n                <span className=\"label\">Processo:</span>\n                <span className=\"value\">{peticaoGerada.processo}</span>\n              </div>\n              <div className=\"info-row\">\n                <span className=\"label\">Status:</span>\n                <span className=\"value status-pronta\">Pronta para Envio</span>\n              </div>\n            </div>\n\n            <div className=\"peticao-preview\">\n              <h3>Preview do Conte√∫do</h3>\n              <div className=\"preview-box\">\n                {peticaoGerada.conteudo.split('\\n').map((linha, idx) => (\n                  <p key={idx}>{linha}</p>\n                ))}\n              </div>\n            </div>\n\n            <div className=\"acoes\">\n              <button onClick={() => setStep(1)} className=\"btn btn-secondary\">\n                ‚Üê Voltar\n              </button>\n              <button onClick={handleBaixarPeticao} className=\"btn btn-success\">\n                ‚¨áÔ∏è Baixar Peti√ß√£o\n              </button>\n              <button className=\"btn btn-primary\">\n                üì§ Enviar para Protocolo\n              </button>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n
